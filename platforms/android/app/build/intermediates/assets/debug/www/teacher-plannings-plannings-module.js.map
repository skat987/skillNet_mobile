{"version":3,"sources":["webpack:///./src/app/teacher/plannings/plannings.module.ts","webpack:///./src/app/teacher/plannings/plannings.page.html","webpack:///./src/app/teacher/plannings/plannings.page.scss","webpack:///./src/app/teacher/plannings/plannings.page.ts"],"names":[],"mappings":"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","file":"teacher-plannings-plannings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PlanningsPage } from './plannings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PlanningsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PlanningsPage]\r\n})\r\nexport class PlanningsPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>plannings</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-list *ngIf=\\\"plannings.length\\\">\\r\\n    <ion-item *ngFor=\\\"let planning of plannings\\\" >\\r\\n      <ion-list>\\r\\n        <ion-item>{{ planning.name }}</ion-item>\\r\\n        <ion-item>cr√©er le: {{ planning.createdAt | date:\\\"dd/MM/yyyy hh:mm\\\"}}</ion-item>\\r\\n        <ion-item>modifier le: {{ planning.updatedAt | date:\\\"dd/MM/yyyy hh:mm\\\"}}</ion-item>\\r\\n        <ion-item>\\r\\n          <button pull right (click)=\\\"openFile(planning.url)\\\"><ion-icon name=\\\"md-download\\\"></ion-icon></button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n// Plug-ins\r\nimport { DocumentViewer } from '@ionic-native/document-viewer/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\n\r\n// Models\r\nimport { Planning } from '../../models/planning';\r\n\r\n// Services\r\nimport { ApiService } from './../../service/api/api.service';\r\n\r\n@Component({\r\n  selector: 'app-plannings',\r\n  templateUrl: './plannings.page.html',\r\n  styleUrls: ['./plannings.page.scss'],\r\n})\r\nexport class PlanningsPage implements OnInit {\r\n  public plannings: Planning[] = [];\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private platform: Platform, private apiService: ApiService, private file: File, private transfer: FileTransfer, private document: DocumentViewer) { }\r\n\r\n  ngOnInit() {\r\n    this.platform.ready().then(() => this.setPlannings());\r\n  }\r\n\r\n  private setPlannings(): void {\r\n    this.apiService.get('teachers/calendar').then((resp: any) => {\r\n      this.plannings = [];\r\n      for (let i = 0; i < resp.length; i++) {\r\n        // tslint:disable-next-line:max-line-length\r\n        this.plannings[i] = new Planning(resp[i].id, resp[i].file_name, resp[i].file_url, resp[i].formation_id, resp[i].created_at, resp[i].updated_at);\r\n      }\r\n    }).catch(e => console.log('Error setting plannings: ', e));\r\n  }\r\n\r\n  public openFile(url: any): void {\r\n    const fileTransfer: FileTransferObject = this.transfer.create();\r\n    let path: any;\r\n    if (this.platform.is('ios')) {\r\n      path = this.file.documentsDirectory;\r\n    } else if (this.platform.is('android')) {\r\n      path = this.file.dataDirectory;\r\n    }\r\n    fileTransfer.download(url, path + url).then(entry => {\r\n      console.log('open file controle: ', entry);\r\n      this.document.viewDocument(entry.toURL(), 'application/pdf', {});\r\n    }).catch(e => console.log('Error opening file: ', e));\r\n  }\r\n}\r\n"],"sourceRoot":""}