{"version":3,"sources":["webpack:///./src/app/teacher/student-dashboard/student-dashboard.module.ts","webpack:///./src/app/teacher/student-dashboard/student-dashboard.page.html","webpack:///./src/app/teacher/student-dashboard/student-dashboard.page.scss","webpack:///./src/app/teacher/student-dashboard/student-dashboard.page.ts"],"names":[],"mappings":"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","file":"teacher-student-dashboard-student-dashboard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { StudentDashboardPage } from './student-dashboard.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StudentDashboardPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [StudentDashboardPage]\r\n})\r\nexport class StudentDashboardPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>student-dashboard</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-card *ngIf=\\\"student\\\">\\r\\n    <ion-img src=\\\"{{ student.avatar }}\\\"></ion-img>\\r\\n  \\r\\n    <ion-card-content>\\r\\n      <ion-card-title>{{ student.fullName }}</ion-card-title>\\r\\n  \\r\\n      <ion-list *ngIf=\\\"modules.length\\\">\\r\\n        <ion-list-header>\\r\\n          Module de l'étudiant\\r\\n        </ion-list-header>\\r\\n        <ion-item *ngFor=\\\"let module of modules\\\" (click)=\\\"ShowModule(module)\\\">\\r\\n          <ion-icon name=\\\"arrow-forward\\\" item-end></ion-icon>\\r\\n          <ion-label>\\r\\n            {{ module.name }}\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <div *ngIf=\\\"moduleSelected\\\">\\r\\n    <h3>Module: {{ moduleSelected.name }}</h3>\\r\\n    <h6>Compétences: {{ moduleSelected.progression.skillsCount }}</h6>\\r\\n    <h6>Validations du formateur: {{ moduleSelected.progression.teacherValidations }}</h6>\\r\\n    <h6>Validations de l'étudiant: {{ moduleSelected.progression.studentValidations }}</h6>\\r\\n    <div *ngIf=\\\"moduleSelected.skills.length\\\">      \\r\\n      <ion-list *ngFor=\\\"let skill of moduleSelected.skills\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Compétences: {{ skill.name }}</ion-label>          \\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Formateur: {{ skill.teacher.fullName }}</ion-label>          \\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Validation du formateur</ion-label>\\r\\n          <ion-checkbox color=\\\"light\\\" [(ngModel)]=\\\"skill.progression.teacherValue\\\" (ionChange)=\\\"updateValidation(skill.progression.id, skill.progression.teacherValue)\\\"></ion-checkbox>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Validation de l'étudiant</ion-label>\\r\\n          <ion-checkbox color=\\\"light\\\" [(ngModel)]=\\\"skill.progression.studentValue\\\" disabled=\\\"true\\\"></ion-checkbox>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n  </div>  \\r\\n</ion-content>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ApiService } from '../../service/api/api.service';\r\n\r\n// Models\r\nimport { Skill } from '../../models/skill';\r\nimport { Student } from '../../models/student';\r\nimport { Teacher } from '../../models/teacher';\r\nimport { ModuleFormation } from '../../models/module-formation';\r\nimport { ProgressionTotal } from '../../models/progression-total';\r\nimport { ProgressionDetails } from '../../models/progression-details';\r\n\r\n@Component({\r\n  selector: 'app-student-dashboard',\r\n  templateUrl: './student-dashboard.page.html',\r\n  styleUrls: ['./student-dashboard.page.scss'],\r\n})\r\nexport class StudentDashboardPage implements OnInit {\r\n  public student: Student;\r\n  public modules: ModuleFormation[] = [];\r\n  public moduleSelected: ModuleFormation;\r\n\r\n  constructor(private platform: Platform, private route: ActivatedRoute, private apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    // tslint:disable-next-line:max-line-length\r\n    this.platform.ready().then(() => this.setStudent(this.route.snapshot.paramMap.get('student'), this.route.snapshot.paramMap.get('formation')));\r\n  }\r\n\r\n  private setStudent(studentId: any, formationId: any): void {\r\n    this.apiService.get('getStudentDatas/' + studentId + '/ofFormation/' + formationId).then((resp: any) => {\r\n      // tslint:disable-next-line:max-line-length\r\n      this.student = new Student(resp['student'].user_id, resp['student'].user_lastname, resp['student'].user_firstname, resp['student'].user_avatar);\r\n      this.modules = [];\r\n      let currentModule: ModuleFormation;\r\n      for (let i = 0; i < resp['modules'].length; i++) {\r\n        // tslint:disable-next-line:max-line-length\r\n        currentModule = new ModuleFormation(resp['modules'][i].id, resp['modules'][i].name, new ProgressionTotal(resp['modules'][i].totalSkills, resp['modules'][i].progression.student, resp['modules'][i].progression.teacher));\r\n        for (let j = 0; j < resp['modules'][i].skills.length; j++) {\r\n          // tslint:disable-next-line:max-line-length\r\n          currentModule.addSkill(new Skill(resp['modules'][i].skills[j].id, resp['modules'][i].skills[j].name, new ProgressionDetails(resp['modules'][i].skills[j].progression.student_progression_id, resp['modules'][i].skills[j].progression.student_validation, resp['modules'][i].skills[j].progression.student_validation_date, resp['modules'][i].skills[j].progression.teacher_validation, resp['modules'][i].skills[j].progression.teacher_validation_date), new Teacher(null, resp['modules'][i].skills[j].teacher.lastname, resp['modules'][i].skills[j].teacher.firstname)));\r\n        }\r\n        this.modules.push(currentModule);\r\n      }\r\n    }).catch(e => console.log('Error getting student data: ', e));\r\n  }\r\n\r\n  public ShowModule(module: ModuleFormation): void {\r\n    this.moduleSelected = module;\r\n  }\r\n\r\n  public updateValidation(progressionId: any, validation: any): void {\r\n    this.apiService.put('progression/updateTeacherValidation', { progression_id: progressionId, teacher_validation: validation })\r\n    .then(resp => console.log('update validation: ', resp))\r\n    .catch(e => console.log('Error updating validation: ', e));\r\n  }\r\n}\r\n"],"sourceRoot":""}