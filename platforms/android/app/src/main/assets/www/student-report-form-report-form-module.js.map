{"version":3,"sources":["webpack:///./src/app/student/report-form/report-form.module.ts","webpack:///./src/app/student/report-form/report-form.page.html","webpack:///./src/app/student/report-form/report-form.page.scss","webpack:///./src/app/student/report-form/report-form.page.ts"],"names":[],"mappings":"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","file":"student-report-form-report-form-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ReportFormPage } from './report-form.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReportFormPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ReportFormPage]\r\n})\r\nexport class ReportFormPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-title>report-form</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n    <form [formGroup]=\\\"newReportForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div>\\r\\n            <ion-list>\\r\\n                <ion-item>\\r\\n                    <ion-label>Titre du rapport: </ion-label>\\r\\n                    <ion-input formControlName=\\\"title\\\" required type=\\\"text\\\" placeholder=\\\"Titre\\\"></ion-input>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label>Date: </ion-label>\\r\\n                    <ion-datetime formControlName=\\\"date\\\" required displayFormat=\\\"MM/DD/YYYY\\\" pickerFormat=\\\"MM/DD/YYYY\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label>Texte: </ion-label>\\r\\n                    <ion-textarea formControlName=\\\"text\\\" required placeholder=\\\"Votre texte\\\"></ion-textarea>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label>Note: </ion-label>\\r\\n                    <ion-input formControlName=\\\"rate\\\" required type=\\\"number\\\" placeholder=\\\"Note\\\"></ion-input>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-button shape=\\\"round\\\" color=\\\"primary\\\" fill=\\\"outline\\\" type=\\\"submit\\\">\\r\\n                Valider\\r\\n            </ion-button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n// Services\r\nimport { ApiService } from './../../service/api/api.service';\r\n\r\n@Component({\r\n  selector: 'app-report-form',\r\n  templateUrl: './report-form.page.html',\r\n  styleUrls: ['./report-form.page.scss'],\r\n})\r\nexport class ReportFormPage implements OnInit {\r\n  public newReportForm: FormGroup;\r\n\r\n  constructor(private platform: Platform, private formBuilder: FormBuilder, private apiService: ApiService) {\r\n    this.platform.ready().then(() => {\r\n      this.newReportForm = this.formBuilder.group({\r\n        title: ['', Validators.required],\r\n        date: ['', Validators.required],\r\n        rate: ['', Validators.required],\r\n        text: ['', Validators.required]\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  get f() { return this.newReportForm.controls; }\r\n\r\n  public onSubmit(): void {\r\n    console.log('create controle 1: ', this.newReportForm.value);\r\n    if (this.newReportForm.invalid) { return; }\r\n    const dataReport = {\r\n      title: this.f.title.value,\r\n      date: new Date(this.f.date.value.year.value, this.f.date.value.month.value, this.f.date.value.day.value).toJSON(),\r\n      text: this.f.text.value,\r\n      rate: this.f.rate.value\r\n    };\r\n    console.log('create controle 2: ', dataReport);\r\n    this.apiService.post('report/create', dataReport)\r\n    .then(resp => console.log('create report: ', resp))\r\n    .catch(e => console.log('Error creating report: ', e));\r\n  }\r\n}\r\n"],"sourceRoot":""}