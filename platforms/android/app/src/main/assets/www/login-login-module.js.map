{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAmB;gBACnB,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B5B,i7B;;;;;;;;;;;ACAA,+BAA+B,wBAAwB,EAAE,cAAc,sBAAsB,EAAE,+BAA+B,sBAAsB,EAAE,SAAS,iBAAiB,gBAAgB,iBAAiB,mBAAmB,EAAE,OAAO,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9M;AACT;AAC2B;AAEpE,UAAU;AACmD;AAO7D;IAIE,mBAAoB,WAAwB,EAAU,MAAc,EAAU,WAAwB;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAH9F,aAAQ,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;IAGyB,CAAC;IAE3G,4BAAQ,GAAR;QAAA,iBAUC;QATC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAS;gBACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAtC,CAAsC,CAAC,CAAC;QACxD,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,wBAAC;aAAL,cAAU,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEpC,2BAAO,GAAd;QAAA,iBAKC;QAJC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC/D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,EAAE,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,EAA/B,CAA+B,CAAC,CAAC;IAC3C,CAAC;IAzBU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKiC,sEAAW,EAAkB,sDAAM,EAAuB,0DAAW;OAJ3F,SAAS,CA0BrB;IAAD,gBAAC;CAAA;AA1BqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"<ion-content class=\\\"login-container\\\" padding>\\r\\n  <div class = \\\"col header text-center\\\">\\r\\n      <img src=\\\"assets/imgs/logo_skillnet.png\\\" class=\\\"logo\\\" />\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"loginForm\\\" (submit)=\\\"doLogin()\\\">\\r\\n    <ion-item>\\r\\n      <ion-icon name=\\\"mail\\\" item-start class=\\\"text-primary\\\"></ion-icon>\\r\\n      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"  Votre email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon name=\\\"lock\\\" item-start class=\\\"text-primary\\\"></ion-icon>\\r\\n      <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"  Votre mot de passe\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-button color=\\\"secondary\\\" expand=\\\"full\\\" type=\\\"submit\\\">\\r\\n      C'est parti !\\r\\n    </ion-button>\\r\\n  </form>\\r\\n  <p text-right ion-text white tappable><strong>Mot de passe oubli√© ?</strong></p>\\r\\n</ion-content>\\r\\n\"","module.exports = \"ion-content {\\n  background: #2E1166; }\\n\\nion-item {\\n  background: white; }\\n\\n.login-container > header {\\n  padding-top: 20px; }\\n\\nimg {\\n  height: 45vh;\\n  width: auto;\\n  margin: auto;\\n  display: block; }\\n\\np {\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n// Service\r\nimport { AuthService } from './../service/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  private redirect = [null, '/admin', '/teacher/formations', '/student/dashboard'];\r\n  public loginForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    if (this.authService.isLogged()) {\r\n      this.authService.getAuth().then((user: any) => {\r\n        this.router.navigate([this.redirect[user.user_type_id]]);\r\n      }).catch(e => console.log('Error storage user: ', e));\r\n    }\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  public doLogin(): void {\r\n    if (this.loginForm.invalid) { return; }\r\n    this.authService.login(this.loginForm.value).subscribe((user: any) => {\r\n      this.router.navigate([this.redirect[user.user_type_id]]);\r\n    }, e => console.log('Error login: ', e));\r\n  }\r\n}\r\n"],"sourceRoot":""}