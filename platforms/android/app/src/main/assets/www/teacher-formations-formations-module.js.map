{"version":3,"sources":["webpack:///./src/app/teacher/formations/formations.module.ts","webpack:///./src/app/teacher/formations/formations.page.html","webpack:///./src/app/teacher/formations/formations.page.scss","webpack:///./src/app/teacher/formations/formations.page.ts"],"names":[],"mappings":"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","file":"teacher-formations-formations-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FormationsPage } from './formations.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FormationsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [FormationsPage]\r\n})\r\nexport class FormationsPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>formations</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <div *ngIf=\\\"teacher\\\">\\r\\n    <ion-card>\\r\\n      <ion-img src=\\\"{{ teacher.avatar }}\\\"></ion-img>\\r\\n    \\r\\n      <ion-card-content>\\r\\n        <ion-card-title>{{ teacher.fullName }}</ion-card-title>\\r\\n    \\r\\n        <p>Votre adresse électronique: {{ teacher.email }}</p>\\r\\n        <p>Votre date de naissance: {{ teacher.birthDate }}</p>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    <div *ngIf=\\\"teacher.formations.length\\\">\\r\\n      <ion-card *ngFor=\\\"let formation of teacher.formations\\\">\\r\\n        <ion-img src=\\\"{{ formation.logo }}\\\"></ion-img>\\r\\n      \\r\\n        <ion-card-content>\\r\\n          <ion-card-title>{{ formation.name }}</ion-card-title>\\r\\n          <ion-list *ngIf=\\\"formation.modules.length\\\">\\r\\n            <ion-list-header>\\r\\n              Modules de la formations\\r\\n            </ion-list-header>\\r\\n            <ion-item *ngFor=\\\"let module of formation.modules\\\">\\r\\n              <ion-label>\\r\\n                {{ module.name }}\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n          <ion-list *ngIf=\\\"formation.students.length\\\">\\r\\n            <ion-list-header>\\r\\n              Etudiants de la formation: {{ formation.studentCount }}\\r\\n            </ion-list-header>\\r\\n            <ion-item *ngFor=\\\"let student of formation.students\\\" (click)=\\\"showStudentDashBoard(student.id, formation.id)\\\">\\r\\n              <ion-icon name=\\\"arrow-forward\\\" item-end></ion-icon>\\r\\n              <ion-avatar slot=\\\"start\\\">\\r\\n                <img src=\\\"{{ student.avatar }}\\\">\\r\\n              </ion-avatar>\\r\\n              <ion-label>\\r\\n                <h2>nom: {{ student.fullName }}</h2>\\r\\n                <h3>mail: {{ student.email }}</h3>\\r\\n                <p>validations formateur: {{ student.progression.teacherValidations }}</p>\\r\\n                <p>validations étudiante: {{ student.progression.studentValidations }}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n// Models\r\nimport { Student } from '../../models/student';\r\nimport { Teacher } from '../../models/teacher';\r\nimport { Formation } from '../../models/formation';\r\nimport { ModuleFormation } from '../../models/module-formation';\r\nimport { ProgressionTotal } from '../../models/progression-total';\r\n\r\n// Services\r\nimport { AuthService } from '../../service/auth/auth.service';\r\nimport { ApiService } from '../../service/api/api.service';\r\n\r\n@Component({\r\n  selector: 'app-formations',\r\n  templateUrl: './formations.page.html',\r\n  styleUrls: ['./formations.page.scss'],\r\n})\r\nexport class FormationsPage implements OnInit {\r\n  public teacher: Teacher;\r\n\r\n  constructor(private apiService: ApiService, private platform: Platform, private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.platform.ready().then(() => this.setTeacher());\r\n  }\r\n\r\n  private setTeacher(): void {\r\n    this.authService.getAuth().then((user: any) => {\r\n      // tslint:disable-next-line:max-line-length\r\n      this.teacher = new Teacher(null, user.lastname, user.firstname, user.avatar, user.email, user.gender, user.birthday_date, user.phone_number, user.token);\r\n    }).then(() => this.setFormations())\r\n    .catch(e => console.log('Error setting Teacher: ', e));\r\n  }\r\n\r\n  private setFormations(): void {\r\n    this.apiService.get('teacher/myFormations').then((resp: any) => {\r\n      for (let i = 0; i < resp['data'].length; i++) {\r\n        // tslint:disable-next-line:max-line-length\r\n        this.teacher.addFormation(new Formation(resp['data'][i].id, resp['data'][i].name, resp['data'][i].logo, resp['data'][i].start_at, resp['data'][i].end_at, resp['data'][i].total_students));\r\n        for (let j = 0; j < resp['data'][i].modules.length; j++) {\r\n          this.teacher.formations[i].addModule(new ModuleFormation(resp['data'][i].modules[j].id, resp['data'][i].modules[j].name));\r\n        }\r\n      }\r\n    }).then(() => this.setStudents())\r\n    .catch(e => console.log('Error setting formations list: ', e));\r\n  }\r\n\r\n  private setStudents(): void {\r\n    for (let i = 0; i < this.teacher.formations.length; i++) {\r\n      this.apiService.get('getStudentsOfFormation/' + this.teacher.formations[i].id).then((resp: any) => {\r\n        for (let j = 0; j < resp.length; j++) {\r\n          // tslint:disable-next-line:max-line-length\r\n          this.teacher.formations[i].addStudent(new Student(resp[j].id, resp[j].lastname, resp[j].firstname, resp[j].avatar, resp[j].email, resp[j].gender, resp[j].birthday_date, resp[j].phone_number, null, resp[j].student_id, this.teacher.formations[i].id, new ProgressionTotal(resp[j].progression.totalSkills, resp[j].progression.studentValidations, resp[j].progression.teacherValidations)));\r\n        }\r\n      }).catch(e => console.log('Error setting students Lists : ', e));\r\n    }\r\n  }\r\n\r\n  public showStudentDashBoard(studentId: any, formationId: any): void {\r\n    this.router.navigate(['/teacher/student-dashboard', { student: studentId, formation: formationId }]);\r\n  }\r\n}\r\n"],"sourceRoot":""}