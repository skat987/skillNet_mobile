{"version":3,"sources":["webpack:///./src/app/student/plannings/plannings.module.ts","webpack:///./src/app/student/plannings/plannings.page.html","webpack:///./src/app/student/plannings/plannings.page.scss","webpack:///./src/app/student/plannings/plannings.page.ts"],"names":[],"mappings":"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","file":"student-plannings-plannings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PlanningsPage } from './plannings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PlanningsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PlanningsPage]\r\n})\r\nexport class PlanningsPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle>\\r\\n        <ion-button>\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n    <ion-title text-center>Plannings</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-list insert>\\r\\n    <ion-card *ngIf=\\\"planning\\\" class=\\\"cardShadows\\\" >\\r\\n      <ion-item (click)=\\\"openFile(planning.url)\\\" item-content>\\r\\n        <h2 item-start>{{ planning.name }}</h2>\\r\\n        <ion-icon name=\\\"download\\\" md=\\\"md-download\\\" item-end></ion-icon>\\r\\n      </ion-item>\\r\\n      <ion-item item-content>\\r\\n        <h4 item-start>{{ planning.updatedAt | date:\\\"dd-MM-yyyy hh:mm\\\" }}</h4>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \"app-plannings .cardShadows {\\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23); }\\n\\napp-plannings .icon {\\n  font-size: 25px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n// Plug-ins\r\nimport { DocumentViewer } from '@ionic-native/document-viewer/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\n\r\n// Models\r\nimport { Planning } from './../../models/planning';\r\n\r\n// Services\r\nimport { ApiService } from './../../service/api/api.service';\r\n\r\n@Component({\r\n  selector: 'app-plannings',\r\n  templateUrl: './plannings.page.html',\r\n  styleUrls: ['./plannings.page.scss'],\r\n})\r\nexport class PlanningsPage implements OnInit {\r\n  public planning: Planning;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private platform: Platform, private document: DocumentViewer, private file: File, private transfer: FileTransfer, private apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    this.platform.ready().then(() => this.setPlanning());\r\n  }\r\n\r\n  private setPlanning(): void {\r\n    this.apiService.get('students/calendar').then((resp: any) => {\r\n      // tslint:disable-next-line:max-line-length\r\n      this.planning = new Planning(resp[0].id, resp[0].file_name, resp[0].file_url, resp[0].formation_id, resp[0].created_at, resp[0].updated_at);\r\n    }).catch(e => console.log('Error setting planning: ', e));\r\n  }\r\n\r\n  public openFile(url: any): void {\r\n    const fileTransfer: FileTransferObject = this.transfer.create();\r\n    const apiUrl = 'http://skillstracking.motjo.io/uploads/calendars/';\r\n    let path: any;\r\n    if (this.platform.is('ios')) {\r\n      path = this.file.documentsDirectory;\r\n    } else if (this.platform.is('android')) {\r\n      path = this.file.dataDirectory;\r\n    }\r\n    fileTransfer.download(apiUrl + url, path + url).then(entry => {\r\n      console.log('open file controle: ', entry);\r\n      this.document.viewDocument(entry.toURL(), 'application/pdf', {});\r\n    }).catch(e => console.log('Error opening file: ', e));\r\n  }\r\n}\r\n"],"sourceRoot":""}