var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Injectable } from '@angular/core';
var DocumentViewer = /** @class */ (function (_super) {
    __extends(DocumentViewer, _super);
    function DocumentViewer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DocumentViewer.prototype.getSupportInfo = function () { return cordova(this, "getSupportInfo", {}, arguments); };
    DocumentViewer.prototype.canViewDocument = function (url, contentType, options, onPossible, onMissingApp, onImpossible, onError) { return cordova(this, "canViewDocument", { "sync": true }, arguments); };
    DocumentViewer.prototype.viewDocument = function (url, contentType, options, onShow, onClose, onMissingApp, onError) { return cordova(this, "viewDocument", { "sync": true }, arguments); };
    DocumentViewer.pluginName = "Document Viewer";
    DocumentViewer.plugin = "cordova-plugin-document-viewer";
    DocumentViewer.pluginRef = "SitewaertsDocumentViewer";
    DocumentViewer.repo = "https://github.com/sitewaerts/cordova-plugin-document-viewer";
    DocumentViewer.platforms = ["Android", "iOS", "Windows"];
    DocumentViewer = __decorate([
        Injectable()
    ], DocumentViewer);
    return DocumentViewer;
}(IonicNativePlugin));
export { DocumentViewer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2RvY3VtZW50LXZpZXdlci9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7SUE4RFAsa0NBQWlCOzs7O0lBUW5ELHVDQUFjO0lBZ0JkLHdDQUFlLGFBQUMsR0FBVyxFQUFFLFdBQW1CLEVBQUUsT0FBOEIsRUFBRSxVQUFxQixFQUFFLFlBQXVCLEVBQUUsWUFBdUIsRUFBRSxPQUFrQjtJQWU3SyxxQ0FBWSxhQUFDLEdBQVcsRUFBRSxXQUFtQixFQUFFLE9BQThCLEVBQUUsTUFBaUIsRUFBRSxPQUFrQixFQUFFLFlBQXVCLEVBQUUsT0FBa0I7Ozs7OztJQXZDdEosY0FBYztRQUQxQixVQUFVLEVBQUU7T0FDQSxjQUFjO3lCQS9EM0I7RUErRG9DLGlCQUFpQjtTQUF4QyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRG9jdW1lbnRWaWV3ZXJPcHRpb25zIHtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIGRvY3VtZW50Vmlldz86IHtcbiAgICBjbG9zZUxhYmVsOiBzdHJpbmc7XG4gIH07XG4gIG5hdmlnYXRpb25WaWV3Pzoge1xuICAgIGNsb3NlTGFiZWw6IHN0cmluZztcbiAgfTtcbiAgZW1haWw/OiB7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgfTtcbiAgcHJpbnQ/OiB7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgfTtcbiAgb3BlbldpdGg/OiB7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgfTtcbiAgYm9va21hcmtzPzoge1xuICAgIGVuYWJsZWQ6IGJvb2xlYW47XG4gIH07XG4gIHNlYXJjaD86IHtcbiAgICBlbmFibGVkOiBib29sZWFuO1xuICB9O1xuICBhdXRvQ2xvc2U/OiB7XG4gICAgb25QYXVzZTogYm9vbGVhbjtcbiAgfTtcbn1cblxuLyoqXG4gKiBAbmFtZSBEb2N1bWVudCBWaWV3ZXJcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gb2ZmZXJzIGEgc2xpbSBBUEkgdG8gdmlldyBQREYgZmlsZXMgd2hpY2ggYXJlIGVpdGhlciBzdG9yZWQgaW4gdGhlIGFwcHMgYXNzZXRzIGZvbGRlciAoL3d3dy8qKSBvciBpbiBhbnkgb3RoZXIgZmlsZSBzeXN0ZW0gZGlyZWN0b3J5IGF2YWlsYWJsZSB2aWEgdGhlIGNvcmRvdmEgZmlsZSBwbHVnaW4uXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBEb2N1bWVudFZpZXdlciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZG9jdW1lbnQtdmlld2VyJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBkb2N1bWVudDogRG9jdW1lbnRWaWV3ZXIpIHsgfVxuICpcbiAqIC4uLlxuICogY29uc3Qgb3B0aW9uczogRG9jdW1lbnRWaWV3ZXJPcHRpb25zID0ge1xuICogICB0aXRsZTogJ015IFBERidcbiAqIH1cbiAqXG4gKiB0aGlzLmRvY3VtZW50LnZpZXdEb2N1bWVudCgnYXNzZXRzL215RmlsZS5wZGYnLCAnYXBwbGljYXRpb24vcGRmJywgb3B0aW9ucylcbiAqXG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJmYWNlc1xuICogRG9jdW1lbnRWaWV3ZXJPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRG9jdW1lbnQgVmlld2VyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZG9jdW1lbnQtdmlld2VyJyxcbiAgcGx1Z2luUmVmOiAnU2l0ZXdhZXJ0c0RvY3VtZW50Vmlld2VyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zaXRld2FlcnRzL2NvcmRvdmEtcGx1Z2luLWRvY3VtZW50LXZpZXdlcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRG9jdW1lbnRWaWV3ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIERpc3BsYXlzIHRoZSBlbWFpbCBjb21wb3NlciBwcmUtZmlsbGVkIHdpdGggZGF0YS5cbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmVzb2x2ZXMgcHJvbWlzZSB3aGVuIHRoZSBFbWFpbENvbXBvc2VyIGhhcyBiZWVuIG9wZW5lZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRTdXBwb3J0SW5mbygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB0aGUgZG9jdW1lbnQgY2FuIGJlIHNob3duXG4gICAqXG4gICAqIEBwYXJhbSB1cmwge3N0cmluZ30gVXJsIHRvIHRoZSBmaWxlXG4gICAqIEBwYXJhbSBjb250ZW50VHlwZSB7c3RyaW5nfSBDb250ZW50IHR5cGUgb2YgdGhlIGZpbGVcbiAgICogQHBhcmFtIG9wdGlvbnMge0FycmF5PERvY3VtZW50Vmlld2VyT3B0aW9ucz59IG9wdGlvbnNcbiAgICogQHBhcmFtIFtvblBvc3NpYmxlXSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25NaXNzaW5nQXBwXSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25JbXBvc3NpYmxlXSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25FcnJvcl0ge0Z1bmN0aW9ufVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIGNhblZpZXdEb2N1bWVudCh1cmw6IHN0cmluZywgY29udGVudFR5cGU6IHN0cmluZywgb3B0aW9uczogRG9jdW1lbnRWaWV3ZXJPcHRpb25zLCBvblBvc3NpYmxlPzogRnVuY3Rpb24sIG9uTWlzc2luZ0FwcD86IEZ1bmN0aW9uLCBvbkltcG9zc2libGU/OiBGdW5jdGlvbiwgb25FcnJvcj86IEZ1bmN0aW9uKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogT3BlbnMgdGhlIGZpbGVcbiAgICpcbiAgICogQHBhcmFtIHVybCB7c3RyaW5nfSBVcmwgdG8gdGhlIGZpbGVcbiAgICogQHBhcmFtIGNvbnRlbnRUeXBlIHtzdHJpbmd9IENvbnRlbnQgdHlwZSBvZiB0aGUgZmlsZVxuICAgKiBAcGFyYW0gb3B0aW9ucyB7RG9jdW1lbnRWaWV3ZXJPcHRpb25zfSBvcHRpb25zXG4gICAqIEBwYXJhbSBbb25TaG93XSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25DbG9zZV0ge0Z1bmN0aW9ufVxuICAgKiBAcGFyYW0gW29uTWlzc2luZ0FwcF0ge0Z1bmN0aW9ufVxuICAgKiBAcGFyYW0gW29uRXJyb3JdIHtGdW5jdGlvbn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICB2aWV3RG9jdW1lbnQodXJsOiBzdHJpbmcsIGNvbnRlbnRUeXBlOiBzdHJpbmcsIG9wdGlvbnM6IERvY3VtZW50Vmlld2VyT3B0aW9ucywgb25TaG93PzogRnVuY3Rpb24sIG9uQ2xvc2U/OiBGdW5jdGlvbiwgb25NaXNzaW5nQXBwPzogRnVuY3Rpb24sIG9uRXJyb3I/OiBGdW5jdGlvbik6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==